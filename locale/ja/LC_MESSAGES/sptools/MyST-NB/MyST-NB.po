# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, hedzr
# This file is distributed under the same license as the HZNB package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: HZNB 0.1.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-21 19:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/sptools/MyST-NB/MyST-NB.md:3
msgid "MyST-NB"
msgstr ""

#: ../../source/sptools/MyST-NB/MyST-NB.md:5
msgid "**更新时间: 2021-12-21, 11:46:56  | myst_nb 版本：|myst_nb_version|**"
msgstr ""

#: ../../source/sptools/MyST-NB/MyST-NB.md:7
msgid ""
"默认情况下，`MyST-NB` 会同时解析 markdown(`.md`) 和 notebooks(`.ipynb`)。如果您在文档中使用 "
"`MyST-NB`，请不要激活 `myst-parser`. 它将被 `myst-nb` 自动激活（因为 `myst-nb` 依赖于 `myst-"
"parser`）。"
msgstr ""

#: ../../source/sptools/MyST-NB/MyST-NB.md:9
msgid ""
"本节介绍如何开始使用`MyST-NB` `Sphinx`扩展。`Sphinx`扩展允许您读取markdown "
"(`.md`)和Jupyter笔记本(`.ipynb`)文件到您的`Sphinx`网站。它还允许您在页面中编写`MyST markdown`。"
msgstr ""

#: ../../source/sptools/MyST-NB/MyST-NB.md:11
msgid ""
"**MyST-NB 主要工具是ipynb文件的 Sphinx 解析器。这允许您直接将 Jupyter Notebooks 转换为 Sphinx "
"文档，即在 Sphinx 中解析和执行 ipynb 文件。**"
msgstr ""

#: ../../source/sptools/MyST-NB/MyST-NB.md:13
msgid "要开始使用扩展，可以遵循以下步骤："
msgstr ""

#: ../../source/sptools/MyST-NB/MyST-NB.md:15
msgid "使用以下命令安装myst-nb:"
msgstr ""

#: ../../source/sptools/MyST-NB/MyST-NB.md:21
msgid "在你的`Sphinx`站点中激活myst_nb扩展名，把它添加到`conf.py`中的`Sphinx`扩展名列表中:"
msgstr ""

#: ../../source/sptools/MyST-NB/MyST-NB.md:35
msgid ""
"将MyST和笔记本内容添加到文档的源文件中。`Sphinx`现在可以解析使用`MyST "
"markdown`编写的markdown文件，Jupyter笔记本(以`.ipynb`结尾)，以及使用`MyST "
"markdown`编写的纯文本的Jupyter笔记本。请确保在``Sphinx` toctree`指令中包含到内容的路径!"
msgstr ""

#: ../../source/sptools/MyST-NB/MyST-NB.md:37
msgid ""
"建立你的文档。`MyST-NB`现在将解析任何markdown "
"(`.md`)、Jupyter笔记本(`.ipynb`)和基于文本的笔记本(``.md``)到`Sphinx`站点，并将它们包含在输出中。（当然，如果你使用`reStructureText`编写文档，那么`Sphinx`将会根据其默认解析器解析"
" (`.rst`)）。"
msgstr ""

